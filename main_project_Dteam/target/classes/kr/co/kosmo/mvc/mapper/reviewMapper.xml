<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="review">

	<!-- 페이징처리를 위한 선택한 물품번호 정보 받아오는 sql -->
	<select parameterType="pvo" resultType="revvo" id="reviewList">
		select * from(select rownum r_num, a.* from(select * from review
		<where>
			pro_num=#{pro_num}
			<if test="sortType1 == 1">order by rev_star desc) </if>
			<if test="sortType1 != 1">
				<!-- sortType==0은 어짜피 최신순 정렬이라 제거함 -->
				<choose>
					<when test="sortType1 == 2">and REV_STAR=5 </when>
					<when test="sortType1 == 3">and REV_STAR=4 </when>
					<when test="sortType1 == 4">and REV_STAR=3 </when>
					<when test="sortType1 == 5">and REV_STAR=2 </when>
					<when test="sortType1 == 6">and REV_STAR=1 </when>
				</choose>
				order by REV_RDATE desc)
			</if>
		</where>
		a)where r_num between #{start} and #{end}
	</select>
	<!-- 페이징처리를 위한 선택한 물품번호 정보 받아오는 sql -->
	<!-- 페이징처리를 위한 선택한 물품번호 갯수 받아오는 쿼리 -->
	<select parameterType="pvo" resultType="int" id="totalCnt">
		select count(*) cnt from review
		<where>
			pro_num=#{pro_num}
			<if test="sortType1>1">
				and REV_STAR=
				<choose>
					<when test="sortType1==2">5 </when>
					<when test="sortType1==3">4 </when>
					<when test="sortType1==4">3 </when>
					<when test="sortType1==5">2 </when>
					<when test="sortType1==6">1 </when>
				</choose>
			</if>
		</where>
		order by REV_RDATE desc
	</select>
	<!-- 페이징처리를 위한 선택한 물품번호 갯수 받아오는 쿼리 -->
	<!-- 리뷰작성 Insert 쿼리 -->
	<!-- 회원번호 상품번호 아직 미적용 -->
	<!-- 회원번호 상품번호 아직 미적용 -->
	<!-- 회원번호 상품번호 아직 미적용 -->
	<select parameterType="revvo" id="addReview">insert into
		reviewvalues(review_seq.nextVal,#{rev_content},#{rev_photo},#{rev_period},#{rev_color},#{rev_star},sysdate,1,1)
	</select>
	<!-- 회원번호 상품번호 아직 미적용 -->
	<!-- 회원번호 상품번호 아직 미적용 -->
	<!-- 회원번호 상품번호 아직 미적용 -->
	<!-- 리뷰작성 Insert 쿼리 -->
	<!-- 최근 제일 7일동안 리뷰가 제일 많은 상품 -->
	<select parameterType="int" resultType="int" id="revRecommend">
		select pro_num from(select pro_num, count(pro_num)from review
		<where>
			rev_rdate > (sysdate-7) group by pro_num order by
			<if test="recommend==0">count(pro_num) </if>
			<if test="recommend==1">avg(pro_num) </if>
		</where>
		desc )where rownum between 1 and 4
	</select>


	<!-- 상세보기 페이지 리뷰탭2 -->
	<resultMap type="revvo" id="rMap">
		<result property="rev_content" column="rev_content" />
		<result property="rev_star" column="rev_star" />
		<result property="rev_color" column="rev_color" />
		<result property="rev_period" column="rev_period"/>
		<result property="rev_photo" column="rev_photo" />
		<result property="rev_rdate" column="rev_rdate" />
		<result property="mem_num" column="mem_num" />
		<result property="pro_num" column="pro_num" />
		<association property="member" javaType="memvo">
			<id property="mem_num" column="mem_num"  />
			<result property="mem_id" column="mem_id" />
			<result property="mem_profile" column="mem_profile" />
		</association>
	</resultMap>
	<select id="reviewTab" resultMap="rMap">
		select r.rev_content,
		r.rev_star, r.rev_color, r.rev_period, r.rev_photo, r.rev_rdate,
		rpad(substr(m.mem_id, 1, 3),6,'*') mem_id, m.mem_profile from review
		r, member m where pro_num =#{pro_num} and r.mem_num = m.mem_num
	</select>

</mapper>
